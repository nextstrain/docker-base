name: CI
on: [push, pull_request, workflow_dispatch]

# Prevent intermediate images from being used by another run.
# Concurrency group is unique:
# 1. to this workflow (github.workflow)
# 2. per event ref (github.ref)
# 3. per run on the default branch (github.run_id)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.ref_type == 'branch' && github.ref_name == github.event.repository.default_branch && github.run_id }}
  cancel-in-progress: true

jobs:
  # Build multi-platform builder and final images with caching from GitHub
  # Container Registry; push to GitHub Container Registry.
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Set $CACHE_DATE
      run: echo "CACHE_DATE=$(date --utc +%Y%m%dT%H%M%SZ)" | tee -a $GITHUB_ENV

    - if: github.event_name != 'pull_request' && github.ref_type == 'branch' && github.ref_name == github.event.repository.default_branch
      name: Set $TAG (default branch)
      run: echo "TAG=build-$CACHE_DATE" | tee -a $GITHUB_ENV
    - if: env.TAG == ''
      name: Set $TAG (PRs, non-default branch)
      # From `man docker-image-tag`: The tag name must be valid ASCII and may
      # contain lowercase and uppercase letters, digits, underscores, periods
      # and hyphens.
      run: echo "TAG=branch-${GITHUB_REF_NAME//[^A-Za-z0-9._-]/-}" | tee -a $GITHUB_ENV

    - uses: docker/setup-qemu-action@v2

    # GITHUB_TOKEN is unreliable¹ so use a token from nextstrain-bot.
    # ¹ https://github.com/docker/build-push-action/issues/463#issuecomment-939394233
    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nextstrain-bot
        password: ${{ secrets.GH_TOKEN_NEXTSTRAIN_BOT_MANAGE_PACKAGES }}

    - run: ./devel/build -p linux/amd64,linux/arm64 -r ghcr.io -t $TAG

    outputs:
      tag: ${{ env.TAG }}

  # Run tests with the final image from GitHub Container Registry.
  test:
    name: test (${{ matrix.platform }})
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:

    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nextstrain-bot
        password: ${{ secrets.GH_TOKEN_NEXTSTRAIN_BOT_MANAGE_PACKAGES }}

    - uses: actions/setup-python@v4
      with:
        python-version: ~3

    # The ubuntu-latest runner is linux/amd64 so anything else will
    # run with emulation, which is still better than nothing.
    - if: matrix.platform != 'linux/amd64'
      uses: docker/setup-qemu-action@v2

    - name: Run zika-tutorial
      run: |
        git clone https://github.com/nextstrain/zika-tutorial
        pip install nextstrain-cli
        nextstrain build --image ghcr.io/nextstrain/base:${{ needs.build.outputs.tag }} zika-tutorial -F
      env:
        DOCKER_DEFAULT_PLATFORM: ${{ matrix.platform }}

  # "Push" (copy) the builder and final images from GitHub Container Registry to
  # Docker Hub, where they will persist. Do this regardless of test results.
  push-branch:
    if: startsWith(needs.build.outputs.tag, 'branch-') && github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nextstrain-bot
        password: ${{ secrets.GH_TOKEN_NEXTSTRAIN_BOT_MANAGE_PACKAGES }}

    - uses: docker/login-action@v2
      with:
        registry: docker.io
        username: nextstrainbot
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Copy $TAG images to Docker Hub
      run: ./devel/copy-images -i ghcr.io -o docker.io -t ${{ needs.build.outputs.tag }}

  # "Push" (copy) the builder and final images from GitHub Container Registry to
  # Docker Hub, where they will persist. Only do this if tests pass.
  push-build:
    if: startsWith(needs.build.outputs.tag, 'build-')
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: nextstrain-bot
        password: ${{ secrets.GH_TOKEN_NEXTSTRAIN_BOT_MANAGE_PACKAGES }}

    - uses: docker/login-action@v2
      with:
        registry: docker.io
        username: nextstrainbot
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Copy $TAG + latest images to Docker Hub
      run: |
        ./devel/copy-images -i ghcr.io -o docker.io -t ${{ needs.build.outputs.tag }} -l

  # Delete the builder and final images from GitHub Container Registry.
  cleanup-registry:
    if: always()
    needs: [build, test, push-branch, push-build]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GH_TOKEN_NEXTSTRAIN_BOT_MANAGE_PACKAGES }}
        script: |
          const script = require('./devel/delete-from-ghcr.js');
          const tag = "${{ needs.build.outputs.tag }}";
          script({octokit: github, tag});
