#!/bin/bash
#
# Builds the nextstrain/base and nextstrain/base-builder images with useful
# caching and pushes to a registry.
#
# By default this tags images using "latest" and pushes to localhost:5000, but
# you can provide a custom tag with -t <tag> and specify a different
# registry with -r <registry>.
#
# Set CACHE_DATE in your environment to force layers after our custom cache
# point to be re-built. See the ARG CACHE_DATE line in the Dockerfile for more
# information.
#
set -euo pipefail

# Set default values.
platform=linux/amd64
registry=localhost:5000
tag=latest

# Read command-line arguments.
while getopts "p:r:t:" opt; do
    case "$opt" in
        p) platform="$OPTARG";;
        r) registry="$OPTARG";;
        t) tag="$OPTARG";;
        *) echo "Usage: $0 [-p <platform>] [-r <registry>] [-t <tag>]" 1>&2; exit 1;;
    esac
done

export GIT_REVISION=$(git describe --tags --abbrev=40 --always --dirty || true)

# The nextstrain/base Dockerfile is a multi-stage with both a "builder" target
# and a main target.  To enable proper caching via --cache-from we need both
# these images available to pull layers from.  This means pulling both in at
# the start and pushing both up at the end.
#
# Calling `docker run nextstrain/base` will still only pull down the small base
# image rather than pulling down the larger nextstrain/base-builder image.

# `buildx create` is necessary to use a driver that supports multi-platform
# images.
builder=nextstrain-builder

if ! docker buildx inspect "$builder" &>/dev/null; then
    # Using a persistent builder allows for faster local development.
    # However, if this is changed and it was previously run on your machine,
    # you may need to remove the builder manually before running the script:
    #     docker builder rm "nextstrain-builder"
    docker buildx create --name "$builder" --driver docker-container --driver-opt network=host
fi

BUILDER_IMAGE=nextstrain/base-builder
FINAL_IMAGE=nextstrain/base

docker buildx build \
    --target builder \
    --builder "$builder" \
    --platform "$platform" \
    --build-arg CACHE_DATE \
    --cache-from "$BUILDER_IMAGE:latest" \
    --cache-from "$BUILDER_IMAGE:$tag" \
    --cache-from "$registry/$BUILDER_IMAGE:latest" \
    --cache-from "$registry/$BUILDER_IMAGE:$tag" \
    --cache-to type=inline \
    --tag "$registry/$BUILDER_IMAGE:$tag" \
    --push \
    --provenance false \
    .

docker buildx build \
    --target final \
    --builder "$builder" \
    --platform "$platform" \
    --build-arg GIT_REVISION \
    --cache-from "$BUILDER_IMAGE:latest" \
    --cache-from "$BUILDER_IMAGE:$tag" \
    --cache-from "$FINAL_IMAGE:latest" \
    --cache-from "$FINAL_IMAGE:$tag" \
    --cache-from "$registry/$BUILDER_IMAGE:latest" \
    --cache-from "$registry/$BUILDER_IMAGE:$tag" \
    --cache-from "$registry/$FINAL_IMAGE:latest" \
    --cache-from "$registry/$FINAL_IMAGE:$tag" \
    --cache-to type=inline \
    --tag "$registry/$FINAL_IMAGE:$tag" \
    --push \
    --provenance false \
    .
